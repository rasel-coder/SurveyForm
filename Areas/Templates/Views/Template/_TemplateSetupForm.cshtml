@using Newtonsoft.Json
@using SurveyForm.Utility
@model SurveyForm.ViewModels.TemplateViewModel

@{

}

@using (Html.BeginForm("SaveTemplateSetup", "Template", FormMethod.Post, new { area = "Templates", enctype = "multipart/form-data" }))
{
	@Html.ValidationSummary(true, "", new { @class = "text-danger" })
	<input type="hidden" asp-for="TemplateId" />

	<div class="row">
		<div class="col-md-9">
			<div class="form-control mb-3">
				@Html.LabelFor(x => x.Title, new { @class = "form-label m-0 color-gray", @for = "templateTitle" })
				@Html.EditorFor(x => x.Title, new { htmlAttributes = new { placeholder = "General knowledge", id = "templateTitle", @class = "form-control border-0 p-0 text-black", required = "required" } })
				@Html.ValidationMessageFor(x => x.Title, "", new { @class = "text-danger" })
			</div>
			<div class="form-control mb-3">
				@Html.LabelFor(x => x.TopicId, new { @class = "form-label m-0 color-gray", @for = "templateTopic" })
				@Html.DropDownListFor(model => model.TopicId, (IEnumerable<SelectListItem>)ViewBag.Topics, "-- Select a Topic --", new { @class = "form-control border-0 p-0 text-black", id = "templateTopic" })
				@Html.ValidationMessageFor(x => x.TopicId, "", new { @class = "text-danger" })
			</div>
			<div class="form-control mb-3">
				@Html.LabelFor(x => x.Tags, new { @class = "form-label m-0 color-gray", @for = "templateTag" })
				@Html.HiddenFor(x => x.Tags, new { id = "hiddenTags" })
				@Html.EditorFor(x => x.Tags, new { htmlAttributes = new { id = "templateTag", @class = "advance-options form-control border-0 p-0 text-black" } })
				@Html.ValidationMessageFor(x => x.Tags, "", new { @class = "text-danger" })
			</div>
		</div>
		<div class="col-md-3">
			<div class="form-control mb-3">
				@Html.LabelFor(x => x.Image, new { @class = "form-label m-0 color-gray" })
				<div id="templateDropzone" class="dropzone border-0 mt-2 text-center"></div>
				@Html.HiddenFor(x => x.Image, new { id = "imagePath" })
				@Html.ValidationMessageFor(x => x.Image, "", new { @class = "text-danger" })
			</div>
		</div>
	</div>

	<div class="form-control mb-3">
		@Html.LabelFor(x => x.Description, new { @class = "form-label m-0 color-gray", @for = "templateDescription" })
		<div class="descriptionEditor border-0" id="editTemplateDescription"></div>
		<input asp-for="Description" type="hidden" id="templateDescription" />
		@Html.ValidationMessageFor(x => x.Description, "", new { @class = "text-danger" })
	</div>

	<div class="form-control mb-3">
		<div class="row">
			<div class="col-md-6">
				@Html.LabelFor(x => x.AccessMode, new { @class = "form-label m-0 mb-4 color-gray" })
				<br />

				@Html.RadioButtonFor(x => x.AccessMode, Enums.TemplateSpecificUser.Only_Me.ToString(), new { id = "option_only_me", @class = "form-check-input access-mode", @checked = "checkek" })
				<label class="form-label m-0 ms-3 mb-2" for="option_only_me">Only Me</label>
				<br />

				@Html.RadioButtonFor(x => x.AccessMode, Enums.TemplateSpecificUser.Authenticated_User.ToString(), new { id = "option_authenticated_users", @class = "form-check-input access-mode" })
				<label class="form-label m-0 ms-3 mb-2" for="option_authenticated_users">Authenticated Users</label>
				<br />

				@Html.RadioButtonFor(x => x.AccessMode, Enums.TemplateSpecificUser.Specified_User.ToString(), new { id = "option_specified_users", @class = "form-check-input access-mode" })
				<label class="form-label m-0 ms-3 mb-2" for="option_specified_users">Specified Users</label>
				<br />
			</div>

			<div class="col-md-6" id="specifiedUsersField" style="display: none;">
				<input name="template_specific_user_tags" placeholder="Add specified users" class="w-100" />
				<input asp-for="TemplateSpecificUsers" type="hidden" />
			</div>

		</div>
	</div>

	<button type="submit" class="btn btn-primary">Next</button>
}